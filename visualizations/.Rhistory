table <- vector(mode = "list", length = max(subset['pixel']))
for (i in range(1:max(subset['pixel']))){
pix_1_data <-subset[subset["pixel"]==i,]
table <- pix_1_data['value']
}
table
for (i in range(1:max(subset['pixel']))){
pix_1_data <-subset[subset["pixel"]==i,]
table[i] <- pix_1_data['value']
}
table <- matrix(, max(subset['pixel']), ncol = nrow(unique(subset["calendar_date"])))
for (i in range(1:max(subset['pixel']))){
pix_1_data <-subset[subset["pixel"]==i,]
table[i, ] <- pix_1_data['value']
}
pix_1_data['value']
nrow(pix_1_data['value'])
nrow(unique(subset["calendar_date"]))
i = 1
table[i, ] <- pix_1_data['value']
table[,]
table
table
table
dims(table)
dim(table)
table <- matrix(, max(subset['pixel']), ncol = nrow(unique(subset["calendar_date"])))
dim(table)
table[i, ] <- pix_1_data['value']
table
dim(table)
table <- matrix(, max(subset['pixel']), ncol = nrow(unique(subset["calendar_date"])))
table[i, ] <- data.matrix(pix_1_data['value'], rownames.force = NA)
dim(table)
table
for (i in range(1:max(subset['pixel']))){
pix_1_data <-subset[subset["pixel"]==i,]
table[i, ] <- data.matrix(pix_1_data['value'], rownames.force = NA)
}
table
library(MODISTools)
library(tidyverse)
subset <-  mt_subset(product = "VNP13A1",
lat = 51.322456,
lon = 12.823147,
band = "500_m_16_days_NDVI",
start = "2017-01-01",
end = "2019-01-01",
km_lr = 1,
km_ab = 1,
site_name = "testsite",
internal = TRUE,
progress = FALSE)
table <- matrix(, max(subset['pixel']), ncol = nrow(unique(subset["calendar_date"])))
for (i in range(1:max(subset['pixel']))){
pix_1_data <-subset[subset["pixel"]==i,]
table[i, ] <- data.matrix(pix_1_data['value'], rownames.force = NA)
}
View(table)
table[4, ] <- data.matrix(pix_1_data['value'], rownames.force = NA)
View(table)
range(1:max(subset['pixel']))
for (i in range(1:max(subset['pixel']))){
print("hello")
pix_1_data <-subset[subset["pixel"]==i,]
table[i, ] <- data.matrix(pix_1_data['value'], rownames.force = NA)
}
for (i in 1:max(subset['pixel'])){
print("hello")
pix_1_data <-subset[subset["pixel"]==i,]
table[i, ] <- data.matrix(pix_1_data['value'], rownames.force = NA)
}
table <- matrix(, max(subset['pixel']), ncol = nrow(unique(subset["calendar_date"])))
for (i in 1:max(subset['pixel'])){
pix_1_data <-subset[subset["pixel"]==i,]
table[i, ] <- data.matrix(pix_1_data['value'], rownames.force = NA)
}
table
ggplot(data = table)
data <- data.frame(table)
ggplot(data = data)
data
ggplot(data = subset, aes(x = "calendar_date", y ="value", color = "pixel"))
ggplot(data = subset, aes(x = "calendar_date", y ="value", color = "pixel"))
ggplot(data = subset, aes(x = "calendar_date", y ="value", color = "pixel")) + geom_line()
data <- data.frame(t(table))
data
table
data <- data.frame(t(table))
data
data["date"] = subset["calendar_date"]
data["date"] = unique(subset["calendar_date"]))
data["date"] = unique(subset["calendar_date"])
data
ggplot(data = data, aes(x = "calendar_date", y ="X1") + geom_line()
ggplot(data = data, aes(x = "X2", y = "X1") + geom_line()
df <- data.frame(t(table))
df["date"] = unique(subset["calendar_date"])
ggplot(data = df, aes(x = "X2", y = "X1") + geom_line()
geom_line()
ggplot(data = df, aes(x = X2, y = X1) + geom_line()
ggplot(data = df, aes(x = "X2", y = "X1")) + geom_line()
ggplot(data = df, aes(x = "X2", y = "X1")) + geom_line()
ggplot(data = df, aes(x = "calendar_date", y = "X1")) + geom_line()
df["calendar_date"]
ggplot(data = df, aes(x = "date", y = "X1")) + geom_line()
df["date"]
df["X1"]
ggplot(data = df, aes(x = date, y = X1)) + geom_line()
ggplot(data = df, aes(x = date, y = X1)) + geom_point()
ggplot(data = subset, aes(x = calendar_date, y = value, color = pixel)) + geom_point()
ggplot(data = subset, aes(x = calendar_date, y = value, color = pixel)) + geom_point()+
scale_x_date(date_breaks = "months" , date_labels = "%b-%y")
df["date"] = as.Date(unique(subset["calendar_date"]))
df["date"] = as.Date(unique(subset["calendar_date"]), "%Y-%m-%d")
df["date"]
subset["calendar_date"] <- as.Date(subset["calendar_date"], "%Y-%m-%d")
subset["calendar_date"] <- as.Date(subset["calendar_date"], "%Y-%m-%d")
subset["calendar_date"]
ggplot
ggplot(data = subset, aes(x = calendar_date, y = value, color = pixel)) + geom_point()+
scale_x_date(date_breaks = "months" , date_labels = "%b-%y")
class(subser["calendar_date",1])
class(subset["calendar_date",1])
class(subset["calendar_date",0])
class(subset["calendar_date"])
class(subset["calendar_date"][1])
class(subset["calendar_date",0])
class(subset["calendar_date",1])
class(df["date",1])
df["date"]
df["date",1]
df["date",2]
df["date"]
df["date"][2]
df["date"]
df["date",10]
df[2]["date"]
df[2,"date"]
class(df[2,"date"])
df["date"] = as.Date(unique(subset["calendar_date"]), "%Y-%m-%d")
subset <-  mt_subset(product = "VNP13A1",
lat = 51.322456,
lon = 12.823147,
band = "500_m_16_days_NDVI",
start = "2017-01-01",
end = "2019-01-01",
km_lr = 1,
km_ab = 1,
site_name = "testsite",
internal = TRUE,
progress = FALSE)
subset["calendar_date"] <- as.Date(subset["calendar_date"], "%Y-%m-%d")
as.Date(subset["calendar_date"], "%Y-%m-%d")
as.Date(subset[1,"calendar_date"], "%Y-%m-%d")
typeof(as.Date(subset[1,"calendar_date"], "%Y-%m-%d"))
typeof(as.Date(subset[1,"calendar_date"], "%Y-%m-%d"))
class(as.Date(subset[1,"calendar_date"], "%Y-%m-%d"))
as.Date(subset[["calendar_date"]], "%Y-%m-%d")
subset["calendar_date"] <- as.Date(subset[["calendar_date"]], "%Y-%m-%d")
ggplot(data = subset, aes(x = calendar_date, y = value, color = pixel)) + geom_point()+
scale_x_date(date_breaks = "months" , date_labels = "%b-%y")
table <- matrix(, max(subset['pixel']), ncol = nrow(unique(subset["calendar_date"])))
for (i in 1:max(subset['pixel'])){
pix_1_data <-subset[subset["pixel"]==i,]
table[i, ] <- data.matrix(pix_1_data['value'], rownames.force = NA)
}
table
quantile(table, probs= seq(0.1,0.5,0.9))
quantile(table, probs= seq(0.1,0.5,0.9))
quantile(table, probs= seq(0.1,0.5,0.9), axis = 1)
quantile(table, probs= seq(0.1,0.5,0.9), axis = 0)
quantile(table, probs= seq(0.1,0.5,0.9), axis =2)
quantile(table, probs= seq(0.5))
quantile(date = table[,0], probs= seq(0.5))
quantile(date = table[,1], probs= seq(0.5))
quantile(data = table[,1], probs= seq(0.5))
quantile(table[,1], probs= seq(0.5))
quantile(table[,1], probs= seq(0.2))
quantile(table[,1], probs= seq(0.1))
quantile(table[,1], probs= seq(0.5))
median(table)
median(table[,0])
median(table[,1])
median(table[,2])
median(table[,3])
median(table[,4])
sapply(table, function(x) median(x))
sapply(t(table), function(x) median(x))
df <- data.frame(t(table))
sapply(df, function(x) median(x))
df <- data.frame(table)
sapply(df, function(x) median(x))
df[nrow(df) + 1,] <- sapply(df, function(x) median(x))
df
nrow(df)
df <- data.frame(table)
#df[nrow(df) + 1,] <- sapply(df, function(x) median(x))
df[nrow(df) + 1 : nrow(df) + 3,] <- sapply(df, function(x) quantile(x, seq(.1,.5,.9)))
nrow(df)
df <- data.frame(table)
nrow(df)
) +
#df[nrow(df) + 1,] <- sapply(df, function(x) median(x))
df[nrow(df) + 1 : nrow(df) + 3,] <- sapply(df, function(x) quantile(x, seq(.1,.5,.9)))
nrow(df)
df <- data.frame(table)
#df[nrow(df) + 1,] <- sapply(df, function(x) median(x))
df[nrow(df) + 1] <- sapply(df, function(x) quantile(x, seq(.1)))
df[nrow(df) + 1] <- sapply(df, function(x) quantile(x, seq(.5)))
df[nrow(df) + 1] <- sapply(df, function(x) quantile(x, seq(.9)))
df <- data.frame(table)
#df[nrow(df) + 1,] <- sapply(df, function(x) median(x))
df[nrow(df) + 1,] <- sapply(df, function(x) quantile(x, seq(.1)))
df[nrow(df) + 1,] <- sapply(df, function(x) quantile(x, seq(.5)))
df[nrow(df) + 1,] <- sapply(df, function(x) quantile(x, seq(.9)))
nrow(df)
df_temp <- data.frame(table)
df <- data.frame(table)
#df[nrow(df) + 1,] <- sapply(df, function(x) median(x))
df[nrow(df) + 1,] <- sapply(df_temp, function(x) quantile(x, seq(.1)))
df[nrow(df) + 1,] <- sapply(df_temp, function(x) quantile(x, seq(.5)))
df[nrow(df) + 1,] <- sapply(df_temp, function(x) quantile(x, seq(.9)))
nrow(df)
t(df)
df_temp <- data.frame(table)
df <- data.frame(table)
#df[nrow(df) + 1,] <- sapply(df, function(x) median(x))
df[nrow(df) + 1,] <- sapply(df_temp, function(x) quantile(x, seq(.1)))
df[nrow(df) + 1,] <- sapply(df_temp, function(x) quantile(x, seq(.5)))
df[nrow(df) + 1,] <- sapply(df_temp, function(x) quantile(x, seq(.9)))
df = t(df)
df["date"] = as.Date(unique(subset["calendar_date"]), "%Y-%m-%d")
subset[0,"calendar_date"]
subset[1,"calendar_date"]
class(subset[1,"calendar_date"])
subset <-  mt_subset(product = "VNP13A1",
lat = 51.322456,
lon = 12.823147,
band = "500_m_16_days_NDVI",
start = "2017-01-01",
end = "2019-01-01",
km_lr = 1,
km_ab = 1,
site_name = "testsite",
internal = TRUE,
progress = FALSE)
df_temp <- data.frame(table)
df <- data.frame(table)
#df[nrow(df) + 1,] <- sapply(df, function(x) median(x))
df[nrow(df) + 1,] <- sapply(df_temp, function(x) quantile(x, seq(.1)))
df[nrow(df) + 1,] <- sapply(df_temp, function(x) quantile(x, seq(.5)))
df[nrow(df) + 1,] <- sapply(df_temp, function(x) quantile(x, seq(.9)))
df = t(df)
df["date"] = as.Date(unique(subset[["calendar_date"]]), "%Y-%m-%d")
unique(subset[["calendar_date"]]
)
as.Date(unique(subset[["calendar_date"]]), "%Y-%m-%d")
df
dim(df)
df <- data.frame(table)
table <- matrix(, max(subset['pixel']), ncol = nrow(unique(subset["calendar_date"])))
for (i in 1:max(subset['pixel'])){
pix_1_data <-subset[subset["pixel"]==i,]
table[i, ] <- data.matrix(pix_1_data['value'], rownames.force = NA)
}
df_temp <- data.frame(table)
df <- data.frame(table)
#df[nrow(df) + 1,] <- sapply(df, function(x) median(x))
df[nrow(df) + 1,] <- sapply(df_temp, function(x) quantile(x, seq(.1)))
df[nrow(df) + 1,] <- sapply(df_temp, function(x) quantile(x, seq(.5)))
df[nrow(df) + 1,] <- sapply(df_temp, function(x) quantile(x, seq(.9)))
df = t(df)
View(df)
View(df)
df["date"] = as.Date(unique(subset[["calendar_date"]]), "%Y-%m-%d")
table <- matrix(, max(subset['pixel']), ncol = nrow(unique(subset["calendar_date"])))
for (i in 1:max(subset['pixel'])){
pix_1_data <-subset[subset["pixel"]==i,]
table[i, ] <- data.matrix(pix_1_data['value'], rownames.force = NA)
}
df_temp <- data.frame(table)
df <- data.frame(table)
#df[nrow(df) + 1,] <- sapply(df, function(x) median(x))
df[nrow(df) + 1,] <- sapply(df_temp, function(x) quantile(x, seq(.1)))
df[nrow(df) + 1,] <- sapply(df_temp, function(x) quantile(x, seq(.5)))
df[nrow(df) + 1,] <- sapply(df_temp, function(x) quantile(x, seq(.9)))
df = t(df)
df["date"] = as.Date(unique(subset[["calendar_date"]]), "%Y-%m-%d")
dim(df)
df
nrow(df)
df_temp <- data.frame(table)
df <- data.frame(table)
#df[nrow(df) + 1,] <- sapply(df, function(x) median(x))
df[nrow(df) + 1,] <- sapply(df_temp, function(x) quantile(x, seq(.1)))
df[nrow(df) + 1,] <- sapply(df_temp, function(x) quantile(x, seq(.5)))
df[nrow(df) + 1,] <- sapply(df_temp, function(x) quantile(x, seq(.9)))
nrow(df)
df["date"] = as.Date(unique(subset[["calendar_date"]]), "%Y-%m-%d")
df = t(df)
nrow(df)
ncol(df)
as.Date(unique(subset[["calendar_date"]]), "%Y-%m-%d")
df["date"] <- as.Date(unique(subset[["calendar_date"]]), "%Y-%m-%d")
df
df["date", ncol(df) + 1] <- as.Date(unique(subset[["calendar_date"]]), "%Y-%m-%d")
df_temp <- data.frame(table)
df <- data.frame(table)
#df[nrow(df) + 1,] <- sapply(df, function(x) median(x))
df[nrow(df) + 1,] <- sapply(df_temp, function(x) quantile(x, seq(.1)))
df[nrow(df) + 1,] <- sapply(df_temp, function(x) quantile(x, seq(.5)))
df[nrow(df) + 1,] <- sapply(df_temp, function(x) quantile(x, seq(.9)))
df = t(df)
df[, ncol(df) + 1] <- as.Date(unique(subset[["calendar_date"]]), "%Y-%m-%d")
df_temp <- data.frame(table)
df <- data.frame(table)
#df[nrow(df) + 1,] <- sapply(df, function(x) median(x))
df[nrow(df) + 1,] <- sapply(df_temp, function(x) quantile(x, seq(.1)))
df[nrow(df) + 1,] <- sapply(df_temp, function(x) quantile(x, seq(.5)))
df[nrow(df) + 1,] <- sapply(df_temp, function(x) quantile(x, seq(.9)))
df[nrow(df) + 1,] <- as.Date(unique(subset[["calendar_date"]]), "%Y-%m-%d")
df
View(df)
df[28,1]
df[29,1]
t(df)
ggplot(data = t(df), aes(x = 29, y = 27)) + geom_point()
ggplot(data = t(df), aes(x = 29, y = 27)) + geom_point()
df_temp <- data.frame(table)
df <- data.frame(table)
#df[nrow(df) + 1,] <- sapply(df, function(x) median(x))
df[nrow(df) + 1,] <- sapply(df_temp, function(x) quantile(x, seq(.1)))
df[nrow(df) + 1,] <- sapply(df_temp, function(x) quantile(x, seq(.5)))
df[nrow(df) + 1,] <- sapply(df_temp, function(x) quantile(x, seq(.9)))
data <- data.frame(date = as.Date(unique(subset[["calendar_date"]])), q1 = df[26,], q2 = df[27,], q3 = df[28,])
data
df[26,]
data <- data.frame(date = as.Date(unique(subset[["calendar_date"]])), q1 = t(df[26,]), q2 = t(df[27,]), q3 = t(df[28,]))
data
data <- data.frame(date = as.Date(unique(subset[["calendar_date"]])), quant1 = t(df[26,]), quant2 = t(df[27,]), quant3 = t(df[28,]))
data
sapply(df_temp, function(x) quantile(x, seq(.1)))
sapply(df_temp, function(x) quantile(x, seq(.5)))
table
table
df_temp <- data.frame(table)
df <- data.frame(table)
#df[nrow(df) + 1,] <- sapply(df, function(x) median(x))
df[nrow(df) + 1,] <- sapply(df_temp, function(x) quantile(x, .1))
df[nrow(df) + 1,] <- sapply(df_temp, function(x) quantile(x,.5))
df[nrow(df) + 1,] <- sapply(df_temp, function(x) quantile(x, .9))
data <- data.frame(date = as.Date(unique(subset[["calendar_date"]])), quant1 = t(df[26,]), quant2 = t(df[27,]), quant3 = t(df[28,]))
data
data <- data.frame(date = as.Date(unique(subset[["calendar_date"]])), "quant1" = t(df[26,]), "quant2" = t(df[27,]), "quant3" = t(df[28,]))
data
data <- data.frame(date = as.Date(unique(subset[["calendar_date"]])), t(df[26:28,]))
data
ggplot(data = data, aes(x = date, y = X26)) + geom_point()
ggplot(data = data, aes(x = date)) + geom_point(aes(y = X26))+geom_point(aes(y = X27))+geom_point(aes(y = X28))
ggplot(data = data, aes(x = date)) +
geom_point(aes(y = X26), color = "darkred")+
geom_point(aes(y = X27), color = "red")+
geom_point(aes(y = X28), color = "darkred")
ggplot(data = data, aes(x = date)) +
geom_line(aes(y = X26), color = "darkred")+
geom_line(aes(y = X27), color = "red")+
geom_line(aes(y = X28), color = "darkred")
ggplot(data = data, aes(x = date)) +
geom_line(aes(y = X26), color = "lightred")+
geom_line(aes(y = X27), color = "red")+
geom_line(aes(y = X28), color = "lightred")
ggplot(data = data, aes(x = date)) +
geom_line(aes(y = X26), color = "lightred")+
geom_line(aes(y = X27), color = "red")+
geom_line(aes(y = X28), color = "lightred")
ggplot(data = data, aes(x = date)) +
geom_line(aes(y = X26), color = "red")+
geom_line(aes(y = X27), color = "red")+
geom_ribbon(aes(fill = fill))+
geom_line(aes(y = X28), color = "red")
ggplot(data = data, aes(x = date)) +
geom_line(aes(y = X26), color = "red")+
geom_line(aes(y = X27), color = "red")+
geom_area(aes(fill = fill))+
geom_line(aes(y = X28), color = "red")
ggplot(data = data, aes(x = date)) +
geom_line(aes(y = X26), color = "red")+
geom_line(aes(y = X27), color = "red")+
geom_area(aes(fill = fill))+
geom_line(aes(y = X28), color = "red")
ggplot(data = data, aes(x = date)) +
geom_line(aes(y = X26), color = "red")+
geom_line(aes(y = X27), color = "red")+
geom_area(aes(fill = X26,X27))+
geom_line(aes(y = X28), color = "red")
ggplot(data = data, aes(x = date)) +
geom_line(aes(y = X26), color = "red")+
geom_line(aes(y = X27), color = "red")+
geom_ribbon(aes(ymax = X26,ymin = X27))+
geom_line(aes(y = X28), color = "red")
ggplot(data = data, aes(x = date)) +
geom_line(aes(y = X26), color = "red")+
geom_line(aes(y = X27), color = "red")+
geom_ribbon(aes(ymax = X26,ymin = X28))+
geom_line(aes(y = X28), color = "red")
ggplot(data = data, aes(x = date)) +
geom_line(aes(y = X26), color = "red")+
geom_line(aes(y = X27), color = "red")+
geom_ribbon(aes(ymax = X26,ymin = X28), fill = "pink", alpha = .5)+
geom_line(aes(y = X28), color = "red")
ggplot(data = data, aes(x = date)) +
geom_line(aes(y = X27), color = "red")+
geom_ribbon(aes(ymax = X26,ymin = X28), fill = "pink", alpha = .5)
ggplot(data = data, aes(x = date)) +
geom_line(aes(y = X27), color = "red")+
geom_ribbon(aes(ymax = X26,ymin = X28), fill = "red", alpha = .5)
subset <-  mt_subset(product = "VNP13A1",
lat = 51.322456,
lon = 12.823147,
band = "500_m_16_days_NDVI",
start = "2017-01-01",
end = "2019-01-01",
km_lr = 5,
km_ab = 5,
site_name = "testsite",
internal = TRUE,
progress = FALSE)
subset["calendar_date"] <- as.Date(subset[["calendar_date"]], "%Y-%m-%d")
table <- matrix(, max(subset['pixel']), ncol = nrow(unique(subset["calendar_date"])))
for (i in 1:max(subset['pixel'])){
pix_1_data <-subset[subset["pixel"]==i,]
table[i, ] <- data.matrix(pix_1_data['value'], rownames.force = NA)
}
df_temp <- data.frame(table)
df <- data.frame(table)
#df[nrow(df) + 1,] <- sapply(df, function(x) median(x))
df[nrow(df) + 1,] <- sapply(df_temp, function(x) quantile(x, .1))
df[nrow(df) + 1,] <- sapply(df_temp, function(x) quantile(x,.5))
df[nrow(df) + 1,] <- sapply(df_temp, function(x) quantile(x, .9))
data <- data.frame(date = as.Date(unique(subset[["calendar_date"]])), t(df[26:28,]))
ggplot(data = data, aes(x = date)) +
geom_line(aes(y = X27), color = "red")+
geom_ribbon(aes(ymax = X26,ymin = X28), fill = "red", alpha = .5)
data
View(subset)
View(df_temp)
View(df_temp)
table
View(data)
sapply(df_temp, function(x) quantile(x, .1))
sapply(df_temp, function(x) quantile(x, .5))
sapply(df_temp, function(x) quantile(x, .9))
sapply(df_temp, function(x) quantile(x, seq(0.1,0.5.9))
sapply(df_temp, function(x) quantile(x, seq(0.1,0.5,.9))
)
sapply(df_temp, function(x) quantile(x, pred =seq(0.1,0.5,.9)))
sapply(df_temp, function(x) quantile(x, probs =seq(0.1,0.5,.9)))
sapply(df_temp, function(x) quantile(x, probs =c(0.1,0.5,.9)))
quantiles <-sapply(df_temp, function(x) quantile(x, probs =c(0.1,0.5,.9)))
data <- data.frame(date = as.Date(unique(subset[["calendar_date"]])), quantiles)
quantiles <-sapply(df_temp, function(x) quantile(x, probs =c(0.1,0.5,.9)))
data <- data.frame(date = as.Date(unique(subset[["calendar_date"]])), quantiles)
date = as.Date(unique(subset[["calendar_date"]]))
da
as.Date(unique(subset[["calendar_date"]]))
quantiles
t(quantiles)
data <- data.frame(date = as.Date(unique(subset[["calendar_date"]])), t(quantiles))
daata
data
head(data)
ggplot(data = data, aes(x = date)) +
geom_line(aes(y = X50.), color = "red")+
geom_ribbon(aes(ymax = X90.,ymin = X10.), fill = "red", alpha = .5)
View(table)
View(table)
colnames(table) <- as.Date(unique(subset[["calendar_date"]]))
table
colnames(table) <- unique(subset[["calendar_date"]])
table
subset <-  mt_subset(product = "VNP13A1",
lat = 51.322456,
lon = 12.823147,
band = "500_m_16_days_NDVI",
start = "2017-01-01",
end = "2019-01-01",
km_lr = 1,
km_ab = 1,
site_name = "testsite",
internal = TRUE,
progress = FALSE)
table <- matrix(, max(subset['pixel']), ncol = nrow(unique(subset["calendar_date"])))
colnames(table) <- as.Date(unique(subset[["calendar_date"]]))
for (i in 1:max(subset['pixel'])){
pix_1_data <-subset[subset["pixel"]==i,]
table[i, ] <- data.matrix(pix_1_data['value'], rownames.force = NA)
}
df <- data.frame(table)
#df[nrow(df) + 1,] <- sapply(df, function(x) median(x))
quantiles <-sapply(df_temp, function(x) quantile(x, probs =c(0.1,0.5,.9)))
data <- data.frame(date = as.Date(unique(subset[["calendar_date"]])), t(quantiles))
ggplot(data = data, aes(x = date)) +
geom_line(aes(y = X50.), color = "red")+
geom_ribbon(aes(ymax = X90.,ymin = X10.), fill = "red", alpha = .5)
colnames(table) <- unique(subset[["calendar_date"]])
table
colnames(table) <- unique(subset[["calendar_date"]])
write.csv(table, "downloaded_ndvi.csv", row.names = FALSE, col.names = TRUE)
setwd("Documents/ETH/DSLab/drought_impact_forecasting/visualizations/")
colnames(table) <- unique(subset[["calendar_date"]])
write.csv(table, "downloaded_ndvi.csv", row.names = FALSE, col.names = TRUE)
